<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>